version: 2.1

orbs:
  teak: teak/sdk-utils@1
  buildomat: teak/buildomat@0.1

jobs:
  test:
    parameters:
      xcode-version:
        type: string
        default: "14.0.1"
    macos:
      xcode: << parameters.xcode-version >>
    resource_class: macos.m1.medium.gen1
    shell: /bin/bash --login -eo pipefail
    steps:
      - run:
          name: Pre-start iOS Simulator
          command: xcrun instruments -w "iPhone 5s (12.2) [" || true
      - ios_setup
      - run:
          name: Run Automated Tests
          command: bundle exec fastlane test
      - store_test_results:
          path: test_output

  build:
    parameters:
      xcode-version:
        type: string
        default: "14.0.1"
    macos:
      xcode: << parameters.xcode-version >>
    resource_class: macos.m1.medium.gen1
    shell: /bin/bash --login -eo pipefail
    steps:
      - ios_setup
      - run:
          name: Ensure IPHONEOS_DEPLOYMENT_TARGET is 9.0
          command: ./deployment_target_check.rb
      - run:
          name: Build Teak SDK
          command: ./compile
      - run:
          name: Compute Checksums
          command: |
            shasum -a 512 build/Release-iphoneos/Teak.framework.zip > Teak.framework.zip.sha512
      - persist_to_workspace:
          root: .
          paths:
            - build/Release-iphoneos/Teak.framework.zip
            - build/Release-iphoneos/TeakResources.bundle.zip
            - TeakExtensions/TeakNotificationContent/Info.plist
            - Sample/build/Release-iphoneos/TeakNotificationService.appex.zip
            - Sample/build/Release-iphoneos/TeakNotificationContent.appex.zip
            - TeakExtensions.zip
            - Teak.framework.zip.sha512

  tag_build:
    docker:
      - image: cimg/ruby:3.2
    steps:
      - checkout
      - teak/tag-promote

  deploy_versioned:
    docker:
      - image: cimg/ruby:3.2
    steps:
      - checkout
      - run: git fetch --tags
      - run:
          name: Install AWS CLI
          command: |
            sudo apt-get update
            sudo apt-get -y -qq install awscli
      - attach_workspace:
          at: workspace/
      - buildomat/aws-oidc-assume
      - run:
          name: Upload SDK to S3
          command: |
            aws s3 cp workspace/build/Release-iphoneos/Teak.framework.zip s3://teak-build-artifacts/ios/Teak-$(git describe --tags --always).framework.zip --acl public-read
            aws s3 cp workspace/build/Release-iphoneos/TeakResources.bundle.zip s3://teak-build-artifacts/ios/TeakResources-$(git describe --tags --always).bundle.zip --acl public-read
            aws s3 cp workspace/TeakExtensions/TeakNotificationContent/Info.plist s3://teak-build-artifacts/ios/Info-$(git describe --tags --always).plist --acl public-read
            aws s3 cp workspace/Sample/build/Release-iphoneos/TeakNotificationService.appex.zip s3://teak-build-artifacts/ios/TeakNotificationService-$(git describe --tags --always).appex.zip --acl public-read
            aws s3 cp workspace/Sample/build/Release-iphoneos/TeakNotificationContent.appex.zip s3://teak-build-artifacts/ios/TeakNotificationContent-$(git describe --tags --always).appex.zip --acl public-read
            aws s3 cp workspace/TeakExtensions.zip s3://teak-build-artifacts/ios/TeakExtensions-$(git describe --tags --always).zip --acl public-read
            aws s3 cp workspace/Teak.framework.zip.sha512 s3://teak-build-artifacts/ios/Teak-$(git describe --tags --always).framework.zip.sha512 --acl public-read

  deploy_latest:
    docker:
      - image: cimg/ruby:3.2
    steps:
      - checkout
      - run: git fetch --tags
      - run:
          name: Install AWS CLI
          command: |
            sudo apt-get update
            sudo apt-get -y -qq install awscli
      - attach_workspace:
          at: workspace/
      - buildomat/aws-oidc-assume
      - run:
          name: Upload SDK to S3
          command: |
            aws s3 cp workspace/build/Release-iphoneos/Teak.framework.zip s3://teak-build-artifacts/ios/Teak.framework.zip --acl public-read
            aws s3 cp workspace/build/Release-iphoneos/TeakResources.bundle.zip s3://teak-build-artifacts/ios/TeakResources.bundle.zip --acl public-read
            aws s3 cp workspace/TeakExtensions/TeakNotificationContent/Info.plist s3://teak-build-artifacts/ios/Info.plist --acl public-read
            aws s3 cp workspace/Sample/build/Release-iphoneos/TeakNotificationService.appex.zip s3://teak-build-artifacts/ios/TeakNotificationService.appex.zip --acl public-read
            aws s3 cp workspace/Sample/build/Release-iphoneos/TeakNotificationContent.appex.zip s3://teak-build-artifacts/ios/TeakNotificationContent.appex.zip --acl public-read
            aws s3 cp workspace/TeakExtensions.zip s3://teak-build-artifacts/ios/TeakExtensions.zip --acl public-read
            aws s3 cp workspace/Teak.framework.zip.sha512 s3://teak-build-artifacts/ios/Teak.framework.zip.sha512 --acl public-read

workflows:
  version: 2

  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * 1-5"
          filters:
            branches:
              only:
                - develop
    jobs:
      - test:
          context:
            - iOS-Build
      - build:
          context:
            - iOS-Build

  nightly-latest:
    triggers:
      - schedule:
          cron: "0 0 * * 1-5"
          filters:
            branches:
              only:
                - master
    jobs:
      - test:
          context:
            - iOS-Build
          xcode-version: "14.0.1"
      - build:
          context:
            - iOS-Build
          xcode-version: "14.0.1"

  un-tagged-build:
    jobs:
      - test:
          context:
            - iOS-Build
          filters:
            tags:
              ignore: /.*/
      - build:
          context:
            - iOS-Build
          filters:
            tags:
              ignore: /.*/
      - tag_build:
          requires:
            - build
          filters:
            tags:
              ignore: /.*/

  tagged-build:
    jobs:
      - test:
          context:
            - iOS-Build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
      - build:
          context:
            - iOS-Build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
      - deploy_versioned:
          context:
            - AWS-OIDC-Role
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
      - hold:
          type: approval
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
      - deploy_latest:
          context:
            - AWS-OIDC-Role
          requires:
            - hold
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/

commands:
  #
  # Common setup
  #
  ios_setup:
    description: "iOS Common Setup"
    steps:
      - checkout
      - restore_cache:
          key: v1-{{ checksum "setup" }}-{{ checksum "Gemfile.lock" }}-{{ .Environment.HOMEBREW_VERSION }}
      - run:
          name: Ruby Gems
          command: |
            bundle check || bundle install --path vendor/bundle
      - save_cache:
          paths:
            - /usr/local/Homebrew/
            - ~/Library/Caches/Homebrew
            - vendor/bundle
            - Sample/vendor/bundle
            - ~/.rvm
          key: v1-{{ checksum "setup" }}-{{ checksum "Gemfile.lock" }}-{{ .Environment.HOMEBREW_VERSION }}
      - run:
          name: Import Teak Notification Category Data
          command: ./import_notification_categories notification_categories.csv
  #
  # Trigger a playbook build
  #
  build_antora_playbook:
    description: "Build Teak Docs"
    parameters:
      build_type:
        type: enum
        default: "development"
        enum: ["development", "production"]
    steps:
      - run:
          name: Trigger Antora Playbook Build
          command: |
            curl --location --request POST 'https://circleci.com/api/v2/project/github/GoCarrot/antora-ui-teak/pipeline' \
            --header 'Content-Type: application/json' \
            -u "${CIRCLE_API_TOKEN}" \
            -d '{
              "parameters": {
                "build_type": "<< parameters.build_type >>"
              }
            }'
