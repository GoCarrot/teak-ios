#!/bin/bash
set -euo pipefail
IFS=$'\n\t'

#TODO: I'd like to try out scan-build
buildtype=${BUILD_TYPE:-Release}
prefix="clang-analyze"
suffix="$(date +%s)"
clangTemp="/tmp/$prefix-$suffix"
xcodebuild -project Teak.xcodeproj -sdk iphoneos -target Framework -configuration $buildtype BUILD_DIR=./build OTHER_CFLAGS="-fembed-bitcode" CLANG_ANALYZER_OUTPUT=plist-html CLANG_ANALYZER_OUTPUT_DIR="$clangTemp" clean build | bundle exec xcpretty -r json-compilation-database -o compile_commands.json #--report junit
if [ ! $? -eq 0 ]; then
  rm -fr $clangTemp
  exit $?
fi

# Disabling the analysis on CI for now
if [ -z ${CI+x} ]; then
  oclint-json-compilation-database --exclude "^.*/3rdParty/.*$" -- -extra-arg=-Wno-everything -report-type html -o oclint_result.html || EXIT_CODE=$? && true ;
  if [ ! $EXIT_CODE -eq 0 ]; then
    echo "oclint found issues"
    if [ -z ${CIRCLE_ARTIFACTS+x} ]; then
      open oclint_result.html
    else
      oclintArtifacts=$CIRCLE_ARTIFACTS/oclint/
      mkdir -p $oclintArtifacts
      cp oclint_result.html $oclintArtifacts
    fi
    # exit 1 # TODO: Uncomment when we want oclint to cause fail
  fi

  if ! [[ -z `find $clangTemp -name *.html -print -quit` ]]; then
    echo "clang static analysis found issues"
    if [ -z ${CIRCLE_ARTIFACTS+x} ]; then
      find $clangTemp -type f -name *.html | xargs open
    else
      clangArtifacts=$CIRCLE_ARTIFACTS/clang/
      mkdir -p $clangArtifacts
      cp `find $clangTemp -type f -name *.html` $clangArtifacts
    fi
    rm -fr $clangTemp
    exit 1
  fi
  rm -fr $clangTemp
fi

(cd Sample; bundle exec fastlane dev)

(cd build/$buildtype-iphoneos/; zip -y -r Teak.framework.zip Teak.framework/)
(cd build/$buildtype-iphoneos/; zip -y -r TeakResources.bundle.zip TeakResources.bundle/)
(cd Sample/build/Release-iphoneos/; zip -y -r TeakNotificationService.appex.zip TeakNotificationService.appex/)
(cd Sample/build/Release-iphoneos/; zip -y -r TeakNotificationContent.appex.zip TeakNotificationContent.appex/)

zip -y -r TeakExtensions.zip TeakExtensions/
