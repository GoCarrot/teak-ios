#!/bin/bash
set -euo pipefail
IFS=$'\n\t'

#TODO: I'd like to try out scan-build
prefix="clang-analyze"
suffix="$(date +%s)"
clangTemp="/tmp/$prefix-$suffix"
xcodebuild -project Teak.xcodeproj -sdk iphoneos -target Framework -configuration Release BUILD_DIR=./build OTHER_CFLAGS="-fembed-bitcode" CLANG_ANALYZER_OUTPUT=plist-html CLANG_ANALYZER_OUTPUT_DIR="$clangTemp" clean analyze | xcpretty -r json-compilation-database -o compile_commands.json #--report junit
if [ ! $? -eq 0 ]; then
  rm -fr $clangTemp
  exit $?
fi

oclint-json-compilation-database -- -report-type html -o oclint_result.html || EXIT_CODE=$? && true ;
if [ ! $EXIT_CODE -eq 0 ]; then
  echo "oclint found issues"
  if [ -z ${CIRCLE_ARTIFACTS+x} ]; then
    open oclint_result.html
  else
    oclintArtifacts=$CIRCLE_ARTIFACTS/oclint/
    mkdir -p $oclintArtifacts
    cp oclint_result.html $oclintArtifacts
  fi
  #exit 1 # TODO: Uncomment when we want oclint to cause fail
fi

if ! [[ -z `find $clangTemp -name *.html -print -quit` ]]; then
  echo "clang static analysis found issues"
  if [ -z ${CIRCLE_ARTIFACTS+x} ]; then
    find $clangTemp -type f -name *.html | xargs open
  else
    clangArtifacts=$CIRCLE_ARTIFACTS/clang/
    mkdir -p $clangArtifacts
    cp `find $clangTemp -type f -name *.html` $clangArtifacts
  fi
  rm -fr $clangTemp
  exit 1
fi
rm -fr $clangTemp

if [ -z ${CIRCLE_ARTIFACTS+x} ]; then
  infer run --fail-on-issue -- xcodebuild -project Teak.xcodeproj -sdk iphoneos -target Framework -configuration Release BUILD_DIR=./build OTHER_CFLAGS="-fembed-bitcode" clean build
  retVal=$?
  if [ ! $? -eq 0 ]; then
    exit $retVal
  fi
elif ! infer --version | grep 0.13.0; then
  echo "New Infer version, check to see if they have that DEAD_STORE stuff fixed."
  exit 1
fi

(cd build/Release-iphoneos/; zip -y -r Teak.framework.zip Teak.framework/)
